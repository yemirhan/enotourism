generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

enum UserType {
  GUIDE
  WINERY
  TASTER
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum WineTypes {
  HEAVY  @map("Heavy")
  SILKY  @map("silky")
  SHARP  @map("sharp")
  BRIGHT @map("bright")
  GRITTY @map("gritty")
  SMOOTH @map("smooth")
}

enum WineNameList {
  Albarino
  Aligote
  Amarone
  Arneis
  Asti_Spumante
  Auslese
  Banylus
  Barbaresco
  Bardolino
  Barolo
  Beaujolais
  Blanc_de_Blancs
  Blanc_de_Noirs
  Blush
  Boal_or_Bual
  Brunello
  Cabernet_Franc
  Cabernet_Sauvignon
  Carignan
  Carmenere
  Cava
  Charbono
  Champagne
  Chardonnay
  Chenin_Blanc
  Cinsaut
  Claret
  Cotes_du_Rhone
  Cot
  Cremant
  Crozes_Hermitage
  Dry_Sack
  Dubonnet
  Eiswein
  Engadiner
  Fendant
  Fiano
  Gewurztraminer
  Gruner_Veltliner
  Ice_Wine
  Johannisberg_Riesling
  Kerner
  Kabinett
  Lemberger
  Liebfraumilch
  Madera
  Malbec
  Marsala
  Mavrodaphne
  Meritage
  Merlot
  Meursault
  Montepulciano
  Moscato
  Muscadet
  Muscat
  Nerello_Mascalese
  Nero_dAvola
  Oloroso
  Orvieto
  Pacherenc
  Palomino
  Pernod
  Petite_Sirah
  Pinot_Blanc
  Pinot_Gris
  Pinot_Noir
  Pouilly_Fume
  Puligny_Montrachet
  Retsina
  Riesling
  Rioja
  Roussanne
  Saint_Emilion
  Saint_Emilion_Grand_Cru
  Sancerre
  Sangiovese
  Sauvignon_Blanc
  Sauternes
  Semillon
  Sherry
  Syrah_
  Tannat
  Tempranillo
  Tignanello
  Tokaji
  Trebbiano
  Ugni_Blanc
  Valpolicella
  Vernaccia
  Vermouth
  Viognier
  Zinfandel
}

enum CountryList {
  Albania
  Argentina
  Armenia
  Australia
  Austria
  Azerbaijan
  Belgium
  Bolivia
  BosniaHerzegovina
  Brazil
  Bulgaria
  Canada
  Chile
  China
  Croatia
  Cyprus
  CzechRepublic
  Denmark
  Estonia
  Finland
  France
  Georgia
  Germany
  Greece
  Hungary
  Israel
  Italy
  Kazakhstan
  Latvia
  Lebanon
  Lithuania
  Luxembourg
  Malta
  Mexico
  Moldova
  Montenegro
  Morocco
  Namibia
  Netherlands
  NewZealand
  NorthernMacedonia
  Peru
  Poland
  Portugal
  Romania
  Russia
  Serbia
  Slovakia
  Slovenia
  SouthAfrica
  Spain
  Sweden
  Switzerland
  Thailand
  Turkey
  Ukraine
  UnitedKingdom
  Uruguay
  USA
  Uzbekistan
  Vietnam
}

model User {
  id           String           @id @default(cuid())
  email        String           @unique
  password     String
  name         String?
  surname      String?
  gender       Gender?          @default(OTHER)
  phone_number String?
  address      Address?
  photo        String?          @default("https://media.istockphoto.com/id/1288129985/vector/missing-image-of-a-person-placeholder.jpg?s=612x612&w=0&k=20&c=9kE777krx5mrFHsxx02v60ideRWvIgI1RWzR1X4MG2Y=")
  about        String?
  user_type    UserType         @default(TASTER)
  Winery       Winery[]
  Tour         Tour[]
  Reservation  Reservation[]
  time_slots   GuideTimeSlots[]
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt

  @@unique([id, user_type])
}

model Address {
  id                 String  @id @default(cuid())
  street             String
  city               String
  flat               String?
  address            String
  is_contact_address Boolean @default(true)
  postcode           String?
  country            Country @relation(fields: [countryId], references: [id])
  countryId          String  @unique
  region             Region? @relation(fields: [regionId], references: [id])
  regionId           String? @unique

  user_id String?  @unique
  user    User?    @relation(fields: [user_id], references: [id])
  Winery  Winery[]
  Tour    Tour[]

  @@index([countryId], name: "countryId")
}

model Country {
  id      String   @id @default(cuid())
  name    String
  code    String
  emoji   String
  unicode String
  image   String
  Address Address?
}

model Region {
  id          String   @id @default(cuid())
  name        String
  description String
  Address     Address?
  addressId   String?
  image       String
}

model Winery {
  id           String         @id @default(cuid())
  name         String
  description  String
  photos       WineryPhotos[]
  address      Address?       @relation(fields: [addressId], references: [id])
  addressId    String?
  email        String
  history      String
  awards       String
  language     Language[]
  owner        User           @relation(fields: [userId], references: [id])
  userId       String
  WorkingHours WorkingHours[]
  Tour         Tour[]
  Wine         Wine[]
  Offer        Offer[]

  @@index([userId])
  @@index([addressId])
}

model WineryPhotos {
  id       String @id @default(cuid())
  wineryId String
  winery   Winery @relation(fields: [wineryId], references: [id])
  url      String

  @@index([wineryId])
}

model Language {
  id       String  @id @default(cuid())
  name     String
  flag     String
  Winery   Winery? @relation(fields: [wineryId], references: [id])
  wineryId String?

  @@index([wineryId])
}

model WorkingHours {
  id       String   @id @default(cuid())
  day      Int
  open     DateTime @db.Time()
  close    DateTime @db.Time()
  Winery   Winery?  @relation(fields: [wineryId], references: [id])
  wineryId String?

  @@index([wineryId])
}

model Tour {
  id                   String           @id @default(cuid())
  name                 String
  description          String
  address              Address?         @relation(fields: [addressId], references: [id])
  addressId            String?
  startTime            DateTime         @db.Time()
  startDate            DateTime
  endDate              DateTime
  price_per_adult      Int
  price_per_kid        Int
  max_number_of_people Int
  if_selected_all      Int
  photos               TourPhoto[]
  Winery               Winery[]
  tour_guide           User             @relation(fields: [tourGuideId], references: [id])
  tourGuideId          String
  TourActivities       TourActivities[]
  Reservation          Reservation[]

  @@index([tourGuideId])
  @@index([addressId])
}

model TourActivities {
  id       String        @id @default(cuid())
  tourId   String
  tour     Tour          @relation(fields: [tourId], references: [id])
  activity OfferTypeEnum

  @@index([tourId])
}

model TourPhoto {
  id     String @id @default(cuid())
  tourId String
  tour   Tour   @relation(fields: [tourId], references: [id])
  url    String

  @@index([tourId])
}

model Wine {
  id                String       @id @default(cuid())
  name              String
  brief_description String
  color             String
  taste             String
  type              WineNameList
  texture           WineTypes
  Winery            Winery?      @relation(fields: [wineryId], references: [id])
  wineryId          String?

  @@index([wineryId])
}

model Offer {
  id                   String          @id @default(cuid())
  name                 String
  description          String
  price                Int
  winery               Winery?         @relation(fields: [wineryId], references: [id])
  offer_types          OfferType[]
  adult_price          Decimal
  kid_price            Decimal
  photos               OfferPhoto[]
  max_number_of_people Int
  duration             Float
  wineryId             String?
  OfferTimeSlot        OfferTimeSlot[]
  Reservation          Reservation[]

  @@index([wineryId])
}

model OfferPhoto {
  id      String @id @default(cuid())
  offerId String
  offer   Offer  @relation(fields: [offerId], references: [id])
  url     String

  @@index([offerId])
}

enum OfferTypeEnum {
  TASTING         @map("Visit and Tasting")
  GUIDES          @map("Wine Guides")
  EXTRAACTIVITIES @map("Extra Activities")
  ACCOMODATION    @map("Accomodation")
  RESTAURANT      @map("Restaurant")
  CHEESE          @map("Cheese")
  WINEMAKING      @map("Winemaking")
  WORKSHOPS       @map("Workshops")
  SIGHTSEEING     @map("Sightseeing")
  WINELECTURE     @map("Wine Lecture")
}

model OfferType {
  id      String        @id @default(cuid())
  name    OfferTypeEnum
  offers  Offer         @relation(fields: [offerId], references: [id])
  offerId String

  @@index([offerId])
}

model OfferTimeSlot {
  id        String   @id @default(cuid())
  startDate DateTime
  endDate   DateTime
  startTime DateTime
  endTime   DateTime
  offerId   String
  offer     Offer    @relation(fields: [offerId], references: [id])

  @@index([offerId])
}

enum StatusType {
  PENDING
  ACCEPTED
  REJECTED
  DONE
}

enum Days {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

model GuideTimeSlots {
  id        String @id @default(cuid())
  date      Days
  startTime Int
  endTime   Int
  guideId   String
  guide     User   @relation(fields: [guideId], references: [id])

  @@index([guideId])
}

model Status {
  id          String        @id @default(cuid())
  status      StatusType    @default(PENDING)
  Reservation Reservation[]
}

model Reservation {
  id               String   @id @default(cuid())
  date             DateTime
  from_time        Int
  to_time          Int
  slug             String
  number_of_people Int
  number_of_kids   Int
  offer            Offer[]
  statusId         String
  status           Status   @relation(fields: [statusId], references: [id])
  userId           String
  user             User     @relation(fields: [userId], references: [id])
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  withTourGuide    Boolean  @default(false)
  tourGuideId      String?
  tour             Tour?    @relation(fields: [tourId], references: [id])
  tourId           String?

  @@index([userId])
  @@index([statusId])
  @@index([tourId])
}
